@model I1.Models.TravelOrder
@using I1.Models

@{
    ViewBag.Title = "Travel Order Edit";
    var types = ViewBag.types as List<TravelOrderType>;
    var drivers = ViewBag.drivers as List<Driver>;
    var cities = ViewBag.cities as List<City>;
    var cars = ViewBag.car as List<Car>;
}

<h2>Travel Order Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TravelOrder</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDTravelOrder)
        @*<div class="form-group">
                @Html.LabelFor(model => model.IDTravelOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IDTravelOrder, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IDTravelOrder, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Distance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Distance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TravelOrderTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.TravelOrderTypeID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList(
                    name: "TravelOrderTypeID",
                    selectList: new SelectList(items: types, dataTextField: "Type", dataValueField: "IDTravelOrderType"),
                    htmlAttributes: new { @class = "form-control" }
                )
                @Html.ValidationMessageFor(model => model.TravelOrderTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DriverID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DriverID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList(
                    name: "DriverID",
                    selectList: new SelectList(items: drivers, dataTextField: "FirstName", dataValueField: "IDDriver"),
                    htmlAttributes: new { @class = "form-control" }
                )
                @Html.ValidationMessageFor(model => model.DriverID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartCityID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.StartCityID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList(
                    name: "StartCityID",
                    selectList: new SelectList(items: cities, dataTextField: "Name", dataValueField: "IDCity"),
                    htmlAttributes: new { @class = "form-control" }
                )
                @Html.ValidationMessageFor(model => model.StartCityID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinishCityID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.FinishCityID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList(
                    name: "FinishCityID",
                    selectList: new SelectList(items: cities, dataTextField: "Name", dataValueField: "IDCity"),
                    htmlAttributes: new { @class = "form-control" }
                )
                @Html.ValidationMessageFor(model => model.FinishCityID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CarID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.CarID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList(
                    name: "CarID",
                    selectList: new SelectList(items: cars, dataTextField: "Registration", dataValueField: "IDCar"),
                    htmlAttributes: new { @class = "form-control" }
                )
                @Html.ValidationMessageFor(model => model.CarID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "All")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
